# .github/workflows/build-publish.yml
name: CI-CD Pipeline for Docker Image

on:
  # Trigger the workflow on pull requests targeting the main branch
  pull_request:
    branches: [ "main" ]
  # Also trigger on pushes to the main branch (after a PR is merged)
  push:
    branches: [ "main" ]

jobs:
  # JOB 1: Build the image and run a basic test
  # This job runs on every PR to ensure the image builds successfully.
  build-and-test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build the Docker image for testing
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          # We don't push here, just load it into the runner's docker instance
          load: true
          # We'll tag it with the PR number for easy reference
          tags: localbuild/openstack-k8s-tools:pr-${{ github.event.number }}

      - name: Test the image
        env:
          OP_SERVICE_ACCOUNT_TOKEN: ${{ secrets.OP_SERVICE_ACCOUNT_TOKEN }}
        run: |
          echo "Testing that the openstack client is installed..."
          docker run --rm \
            -e OP_SERVICE_ACCOUNT_TOKEN \
            localbuild/openstack-k8s-tools:pr-${{ github.event.number }} \
            openstack token issue
          echo "Test passed!"

  # JOB 2: Run Trivy vulnerability scan
  # This job depends on the build succeeding and runs on every PR.
  trivy-scan:
    name: Trivy Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Build the Docker image for testing
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          # We don't push here, just load it into the runner's docker instance
          load: true
          # We'll tag it with the PR number for easy reference
          tags: localbuild/openstack-k8s-tools:pr-${{ github.event.number }}

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'localbuild/openstack-k8s-tools:pr-${{ github.event.number }}'
          format: 'table'
          exit-code: '1' # Fail the build if vulnerabilities are found
          ignore-unfixed: true
          severity: 'CRITICAL,HIGH'


  # JOB 3: Run Snyk vulnerability scan
  # This job also depends on the build succeeding and runs on every PR.
  snyk-scan:
    name: Snyk Scan
    runs-on: ubuntu-latest
    needs: build-and-test
    steps:
      - uses: actions/checkout@v4

      - name: Build the Docker image for testing
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          # We don't push here, just load it into the runner's docker instance
          load: true
          # We'll tag it with the PR number for easy reference
          tags: localbuild/openstack-k8s-tools:pr-${{ github.event.number }}

      - name: Run Snyk to check Docker image for vulnerabilities
        uses: snyk/actions/docker@master
        env:
          # Use the secret you created
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        with:
          image: 'localbuild/openstack-k8s-tools:pr-${{ github.event.number }}' # Scan the Dockerfile
          args: --severity-threshold=high

  # JOB 4: Publish the image to GHCR
  # This job ONLY runs when a PR is merged into the 'main' branch.
  publish:
    name: Publish to GHCR
    runs-on: ubuntu-latest
    # This job requires all previous jobs to succeed
    needs: [build-and-test, trivy-scan, snyk-scan]
    # This condition ensures the job only runs on a push event to the main branch
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/openstack-k8s-tools

      - name: Build and push the final image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}